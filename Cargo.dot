digraph hematite {
  hematite [root=true]
  hematite [fillcolor=red]
  hematite [fontcolor=white]
  hematite [style=filled]
  hematite -> byteorder;
  hematite -> camera_controllers;
  hematite -> flate2;
  hematite -> fps_counter;
  hematite -> gfx;
  hematite -> gfx_device_gl;
  hematite -> image;
  hematite -> libc;
  hematite -> mmap;
  hematite -> piston3d_gfx_voxel;
  hematite -> pistoncore_event;
  hematite -> pistoncore_input;
  hematite -> pistoncore_sdl2_window;
  hematite -> pistoncore_window;
  hematite -> rustc_serialize;
  hematite -> sdl2;
  hematite -> shader_version;
  hematite -> time;
  hematite -> vecmath;
  camera_controllers -> bitflags;
  camera_controllers -> piston;
  camera_controllers -> piston3d_cam;
  camera_controllers -> quaternion;
  camera_controllers -> vecmath;
  clock_ticks -> libc;
  draw_state -> bitflags;
  enum_primitive -> num;
  flate2 -> libc;
  flate2 -> miniz_sys;
  fps_counter -> clock_ticks;
  gfx -> bitflags;
  gfx -> draw_state;
  gfx -> log;
  gfx -> num;
  gfx_device_gl -> gfx;
  gfx_device_gl -> gfx_gl;
  gfx_device_gl -> libc;
  gfx_device_gl -> log;
  gfx_gl -> gl_common;
  gfx_gl -> gl_generator;
  gfx_gl -> khronos_api;
  gfx_gl -> libc;
  gl -> gl_common;
  gl -> gl_generator;
  gl -> khronos_api;
  gl -> libc;
  gl_common -> libc;
  gl_common -> libc;
  gl_generator -> khronos_api;
  gl_generator -> log;
  gl_generator -> xml_rs;
  gl_generator -> khronos_api;
  gl_generator -> log;
  gl_generator -> xml_rs;
  image -> byteorder;
  image -> enum_primitive;
  image -> num;
  log -> libc;
  miniz_sys -> gcc;
  miniz_sys -> libc;
  mmap -> libc;
  num -> rand;
  num -> rustc_serialize;
  piston -> pistoncore_event;
  piston -> pistoncore_input;
  piston -> pistoncore_window;
  piston_gfx_texture -> gfx;
  piston_gfx_texture -> image;
  piston_gfx_texture -> piston_texture;
  piston_viewport -> piston_float;
  piston3d_cam -> quaternion;
  piston3d_cam -> vecmath;
  piston3d_gfx_voxel -> array;
  piston3d_gfx_voxel -> gfx;
  piston3d_gfx_voxel -> image;
  piston3d_gfx_voxel -> piston_gfx_texture;
  pistoncore_event -> pistoncore_event_loop;
  pistoncore_event -> pistoncore_input;
  pistoncore_event -> pistoncore_window;
  pistoncore_event_loop -> clock_ticks;
  pistoncore_event_loop -> piston_viewport;
  pistoncore_event_loop -> pistoncore_window;
  pistoncore_input -> bitflags;
  pistoncore_input -> num;
  pistoncore_input -> rustc_serialize;
  pistoncore_sdl2_window -> gl;
  pistoncore_sdl2_window -> num;
  pistoncore_sdl2_window -> piston;
  pistoncore_sdl2_window -> sdl2;
  pistoncore_sdl2_window -> shader_version;
  pistoncore_window -> libc;
  pistoncore_window -> pistoncore_input;
  quaternion -> vecmath;
  rand -> libc;
  sdl2 -> bitflags;
  sdl2 -> libc;
  sdl2 -> num;
  sdl2 -> rand;
  sdl2 -> sdl2_sys;
  sdl2_sys -> libc;
  sdl2_sys -> num;
  time -> gcc;
  time -> libc;
  vecmath -> piston_float;
  xml_rs -> bitflags;
}
